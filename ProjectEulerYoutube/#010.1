# Summation of primes

# Summation of Primes
import time


def main():
    start_time = time.time()
    number_prime_to_find_up_to = 200000
    list_of_primes = list(range(2, number_prime_to_find_up_to))

    i = 0
    while True:
        for number in list_of_primes[i+1:]:
            if number % list_of_primes[i] == 0:
                list_of_primes.remove(number)
        i += 1
        if i >= len(list_of_primes):
            break
    #print(list_of_primes)


    # while list_of_primes[-1] < number_prime_to_find_up_to:
    #     if all(x % prime for prime in list_of_primes_to_check):
    #         list_of_primes.append(x)
    #         if list_of_primes[index] < x ** 0.5 + 1:
    #             list_of_primes_to_check.append(list_of_primes[index])
    #             index += 1
    #     # print(list_of_primes, list_of_primes_to_check, x)
    #     x += 1
    #
    # # print(list_of_primes)
    # list_of_primes.pop(-1)
    print(sum(list_of_primes))
    # print(list_of_primes)
    # print(list_of_primes[-1])
    print(time.time() - start_time)

def sieve_of_eratosthenes(max_integer):
    sieve = [True for _ in range(max_integer + 1)]
    sieve[0:1] = [False, False]
    for start in range(2, max_integer + 1):
        if sieve[start]:
            for i in range(2 * start, max_integer + 1, start):
                sieve[i] = False
    primes = []
    for i in range(2, max_integer + 1):
        if sieve[i]:
            primes.append(i)
    return primes

def SieveofEratosthenes(primeseries):

    i=1
    primeserieslist = []
    while(i<primeseries):
        i=i+1
        primeserieslist.append(i)

    x=2

    primeslist = []

    while x <= primeseries and x*2 <= primeseries:
        j=2
        while (j < primeseries):
            z = j*x
            if (z <= primeseries):
                if (z in primeserieslist):
                    primeserieslist.remove(z)
            j = j+1

        x=x+1

    print(primeserieslist)


start_time = time.time()

print(sieve_of_eratosthenes(20))

print(time.time()-start_time)
#main()
